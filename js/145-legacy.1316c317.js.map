{"version":3,"file":"js/145-legacy.1316c317.js","mappings":"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","sources":["webpack://heimatoutiao/./src/components/home/Home.vue?c9cc","webpack://heimatoutiao/./src/components/home/ArticleList.vue?4594","webpack://heimatoutiao/src/components/home/ArticleList.vue","webpack://heimatoutiao/./src/components/home/ArticleList.vue?b33d","webpack://heimatoutiao/./src/components/home/ArticleList.vue","webpack://heimatoutiao/src/components/home/Home.vue","webpack://heimatoutiao/./src/components/home/Home.vue?dc02","webpack://heimatoutiao/./src/components/home/Home.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"main\"},[_c('van-nav-bar',{attrs:{\"fixed\":\"\"},scopedSlots:_vm._u([{key:\"right\",fn:function(){return [_c('van-icon',{attrs:{\"name\":\"search\",\"size\":\"0.64rem\",\"color\":\"#fff\"},on:{\"click\":_vm.showSerchComponent}})]},proxy:true}])})],1),_c('div',[_c('van-tabs',{attrs:{\"sticky\":\"\",\"offset-top\":\"1.23rem\",\"animated\":\"\",\"color\":\"rgb(54, 101, 255)\"},model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},_vm._l((_vm.userChannelList),function(item){return _c('van-tab',{key:item.id,attrs:{\"title\":item.name,\"name\":item.id}},[_c('article-list',{attrs:{\"channelId\":_vm.active}})],1)}),1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('van-pull-refresh',{on:{\"refresh\":_vm.onRefresh},model:{value:(_vm.isLoading),callback:function ($$v) {_vm.isLoading=$$v},expression:\"isLoading\"}},[_c('van-list',{attrs:{\"finished\":_vm.finished,\"finished-text\":\"没有新闻给你看辣！\",\"immediate-check\":false,\"offset\":\"50\"},on:{\"load\":_vm.onLoad},model:{value:(_vm.loading),callback:function ($$v) {_vm.loading=$$v},expression:\"loading\"}},_vm._l((_vm.articleList),function(item){return _c('article-item',{key:item.art_id,attrs:{\"articleObj\":item},on:{\"disLikeEV\":_vm.disLikeFn,\"feedbackDustbin\":_vm.dustbin},nativeOn:{\"click\":function($event){return _vm.itemClickFn(item.art_id)}}})}),1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!--\r\n  问题：在页面滚动的时候会报key值重复的错误\r\n  原因：网页刚打开的时候，created和onload同时发起数据请求，造成文章key值重复，因为组件在打开的时候默认会检查一次是否触底，由于第一页数据还没有请求回来的时候标签就挂载了，数据回来之后会更新DOM，这时标签没有高度，所以list的load时间一开始就会被触发\r\n  方案：组件有默认属性，关闭初始检查即可\r\n -->\r\n  <div>\r\n    <!-- 下拉刷新 -->\r\n    <van-pull-refresh v-model=\"isLoading\" @refresh=\"onRefresh\">\r\n      <!-- 用list组件将数据列表的每一项包裹起来 -->\r\n      <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"没有新闻给你看辣！\" @load=\"onLoad\" :immediate-check=\"false\" offset=\"50\">\r\n        <!-- 4 使用 ：使用的时候的名称和注册时的名称是不一样的，是拆解了驼峰命名法之后的-->\r\n        <!-- 这里的.native 修饰符可以给标签绑定自定义事件，本来cell组件是有click事件的，但是其他组件没有这个事件，你给他加click是不生效的-->\r\n        <!-- 另外还有个问题，如果给整个文章item加点击事件会导致点击反馈按钮不生效，原因是事件冒泡，所以需要给反馈按钮的点击事件加修饰符.stop -->\r\n        <!-- 这里不应该是articleList.art_id，而是里面每一项的art_id，因为articleList是一个数组 -->\r\n        <article-item v-for=\"item in articleList\" :key=\"item.art_id\" :articleObj=\"item\" @disLikeEV=\"disLikeFn\" @feedbackDustbin=\"dustbin\" @click.native=\"itemClickFn(item.art_id)\"></article-item>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 2 导入\r\nimport ArticleItem from './ArticleItem.vue'\r\nimport { getArticleListAPI, dislikeArticleAPI, feedbackDustbinAPI } from '@/api/api.js'\r\nimport { Notify } from 'vant'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 每一个频道的文章列表数据自己来管理，目的是为了切换tab的时候，不影响其他tab的数据\r\n      articleList: [],\r\n      // 控制当组件滚动到底部时，会触发 load 事件并将 loading 设置成 true\r\n      loading: false,\r\n      // 若数据已全部加载完毕，则直接将 finished 设置成 true 即可\r\n      finished: false,\r\n      // 默认获取新闻列表的时间戳\r\n      defaultTime: new Date().getTime(),\r\n      // 控制下拉刷新的状态\r\n      isLoading: false\r\n    }\r\n  },\r\n  async created() {\r\n    const res = await getArticleListAPI({\r\n      channel_id: this.channelId,\r\n      timestamp: this.defaultTime\r\n    })\r\n    this.articleList = res.data.data.results\r\n    this.defaultTime = res.data.data.pre_timestamp\r\n    // console.log(this.articleList)\r\n  },\r\n  methods: {\r\n    // 上拉加载\r\n    async onLoad() {\r\n      const res = await getArticleListAPI({\r\n        channel_id: this.channelId,\r\n        timestamp: this.defaultTime\r\n      })\r\n      if (res.data.data.pre_timestamp === null) {\r\n        this.finished = true\r\n      } else {\r\n        this.articleList = [...this.articleList, ...res.data.data.results]\r\n        this.defaultTime = res.data.data.pre_timestamp\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 下拉刷新\r\n    async onRefresh() {\r\n      // 刷新就是把所有数据抹掉，重新请求数据\r\n      this.articleList = []\r\n      this.defaultTime = new Date().getTime()\r\n      const res = await getArticleListAPI({\r\n        channel_id: this.channelId,\r\n        timestamp: this.defaultTime\r\n      })\r\n      this.articleList = [...this.articleList, ...res.data.data.results]\r\n      this.defaultTime = res.data.data.pre_timestamp\r\n      this.isLoading = false\r\n    },\r\n    // 反馈不感兴趣\r\n    async disLikeFn(id) {\r\n      // 如果用try+catch自己处理错误, 内部throw就不会向控制台抛出打印错误, 而是交给你的catch内自定义错误\r\n      // try+catch捕获同步代码的异常\r\n      await dislikeArticleAPI({\r\n        artId: id\r\n      })\r\n      // res里没有什么有用的信息, 所以await往下放行, 就证明请求和响应成功的, 反馈成功\r\n      Notify({ type: 'success', message: '之后会减少类似推荐' })\r\n    },\r\n    // 反馈垃圾内容\r\n    async dustbin(id, value) {\r\n      await feedbackDustbinAPI({\r\n        artId: id,\r\n        type: value\r\n      })\r\n      Notify({ type: 'success', message: '反馈成功' })\r\n    },\r\n    // 点击文章，跳转至详情页\r\n    itemClickFn(id) {\r\n      this.$router.push({\r\n        // 通过查询字符串的方式给每一篇文章的路径绑定一个id\r\n        path: `/article_detail?art_id=${id}`\r\n      })\r\n    }\r\n  },\r\n  props: {\r\n    // 文章列表数组\r\n    // list: Array\r\n    channelId: Number\r\n  },\r\n  // 自定义组件的使用分为四步：创建——导入——注册——使用\r\n  // 3 注册\r\n  components: {\r\n    ArticleItem\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ArticleList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ArticleList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ArticleList.vue?vue&type=template&id=16442ada&scoped=true&\"\nimport script from \"./ArticleList.vue?vue&type=script&lang=js&\"\nexport * from \"./ArticleList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"16442ada\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <!--\r\n  问题：文章列表的切换存在每次切换都会刷新的问题\r\n  原因：文章组件用的是同一个数组切换数据，也就是多个文章列表组件用的是同一个数组的数据，一旦切换会影响到别人\r\n  方案：把文章列表的数据、请求、数组都放到文章列表的组件内部，让自己请求自己的数据，外面只负责传频道ID\r\n  -->\r\n  <div>\r\n    <!-- 顶部navbar -->\r\n    <div class=\"main\">\r\n      <van-nav-bar fixed>\r\n        <!-- 左侧logo -->\r\n        <!-- <template #left> -->\r\n        <!-- 坑：postcss只能翻译style里的css代码，标签内部的行内样式它没办法转换，在移动适配的时候会固定24像素，所以需要手动转成rem单位 -->\r\n        <!-- <van-icon name=\"volume\" size=\"0.64rem\" color=\"#fff\" /> -->\r\n        <!-- <span class=\"logo\">IT头条</span> -->\r\n        <!-- </template> -->\r\n        <template #right>\r\n          <van-icon name=\"search\" size=\"0.64rem\" color=\"#fff\" @click=\"showSerchComponent\" />\r\n        </template>\r\n      </van-nav-bar>\r\n    </div>\r\n\r\n    <!-- 频道 -->\r\n    <div>\r\n      <!-- 通过sticky和offset-top可以实现头部导航和tab栏同时定位 -->\r\n      <!-- animated：给tab切换加动画 -->\r\n      <van-tabs v-model=\"active\" sticky offset-top=\"1.23rem\" animated color=\"rgb(54, 101, 255)\">\r\n        <!-- key的作用：是用来提高Dom更新时的性能 -->\r\n        <van-tab :title=\"item.name\" v-for=\"item in userChannelList\" :key=\"item.id\" :name=\"item.id\">\r\n          <!-- 文章列表自定义组件 -->\r\n          <!-- 父向子传值,这里就只把tab的id传过去就可以了 -->\r\n          <article-list :channelId=\"active\"></article-list>\r\n        </van-tab>\r\n      </van-tabs>\r\n    </div>\r\n\r\n    <!-- 内容 -->\r\n  </div>\r\n</template>\r\n/\r\n<script>\r\nimport { getUserChannelAPI } from '@/api/api.js'\r\nimport ArticleList from './ArticleList.vue'\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 用户频道列表\r\n      userChannelList: [],\r\n      // 默认显示的tab索引,在加了name属性以后，就变成了每一个tab的id了\r\n      active: 0\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.getUserChannelList()\r\n    // this.tabChange()\r\n  },\r\n\r\n  methods: {\r\n    // 获取频道列表\r\n    async getUserChannelList() {\r\n      // 获取用户选择的频道列表\r\n      const res = await getUserChannelAPI()\r\n      // console.log(res)\r\n      this.userChannelList = res.data.data.channels\r\n    },\r\n    // 获取新闻数据列表\r\n    // async getArticleList() {\r\n    //   const res2 = await getArticleListAPI({\r\n    //     channel_id: 0,\r\n    //     timestamp: new Date().getTime()\r\n    //   })\r\n    //   this.articleList = res2.data.data.results\r\n    // },\r\n    // 监听tab栏切换，获取数据列表\r\n    // tabChange() {\r\n    //   this.getArticleList()\r\n    // }\r\n    showSerchComponent() {\r\n      this.$router.push('/search')\r\n    }\r\n  },\r\n  components: {\r\n    ArticleList\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.van-nav-bar {\r\n  border: 0;\r\n}\r\n.logo {\r\n  margin-left: 10px;\r\n  font-size: 18px;\r\n  color: #fff;\r\n}\r\n.van-tab__pane {\r\n  padding-bottom: 50px;\r\n}\r\n.main {\r\n  padding-top: 46px;\r\n}\r\n.van-tab__pane-wrapper {\r\n  padding-bottom: 50px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=454a6c07&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=454a6c07&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"454a6c07\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","on","showSerchComponent","proxy","model","value","callback","$$v","active","expression","_l","item","id","name","staticRenderFns","onRefresh","isLoading","finished","onLoad","loading","art_id","disLikeFn","dustbin","nativeOn","$event","itemClickFn","data","articleList","defaultTime","Date","getTime","getArticleListAPI","channel_id","timestamp","res","methods","dislikeArticleAPI","artId","type","message","feedbackDustbinAPI","$router","push","path","props","channelId","Number","components","ArticleItem","component","userChannelList","created","getUserChannelList","getUserChannelAPI","ArticleList"],"sourceRoot":""}